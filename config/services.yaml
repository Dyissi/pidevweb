parameters:
    elevenlabs.api_key: '%env(ELEVENLABS_API_KEY)%'
    huggingface.api_key: '%env(HUGGINGFACE_API_KEY)%'
    assemblyai.api_key: '%env(ASSEMBLYAI_API_KEY)%' # ✅ NEW
    app.ninja_api_key: '%env(API_NINJAS_KEY)%'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    Nucleos\DompdfBundle\Factory\DompdfFactoryInterface:
        class: Nucleos\DompdfBundle\Factory\DompdfFactory
        arguments:
            $options: { }

    # Makes classes in src/ available to be used as services
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Twilio Service
    App\Service\TwilioService:
        arguments:
            $sid: '%env(TWILIO_SID)%'
            $token: '%env(TWILIO_AUTH_TOKEN)%'

    # Explicit Finder service configuration
    Symfony\Component\Finder\Finder:
        class: Symfony\Component\Finder\Finder
        shared: false

    # Google calendar service 
    App\Service\GoogleCalendarService:
        arguments:
            $clientId: '%env(GOOGLE_CLIENT_ID)%'
            $clientSecret: '%env(GOOGLE_CLIENT_SECRET)%'
            $redirectUri: '%env(GOOGLE_REDIRECT_URI)%'
            $logger: '@logger'

    # Mercure Hub service for publishing Turbo Streams
    Symfony\Component\Mercure\HubInterface: '@mercure.hub.default'

    # ElevenLabs TTS Service
    App\Service\ElevenLabsTTSService:
        arguments:
            $elevenLabsApiKey: '%elevenlabs.api_key%'

    # Hugging Face Sentiment Service
    App\Service\SentimentService:
        arguments:
            $huggingfaceApiKey: '%huggingface.api_key%'

    # Bad Words Detection Service
    App\Service\BadWordsService: ~

    # ✅ AssemblyAI Service
    App\Service\AssemblyAIService:
        arguments:
            $assemblyAiApiKey: '%assemblyai.api_key%'
            $logger: '@logger'
    # QuickChart service configuration
    App\Service\QuickChartService:
        arguments:
            $httpClient: '@http_client'

    App\Service\NinjaApiService:
        arguments:
            $httpClient: '@http_client'
            $params: '@parameter_bag'
            $logger: '@logger'

    App\Service\GeocodingService:
        arguments:
            $nominatimGeocoder: '@bazinga_geocoder.provider.nominatim'

    App\Service\GeminiService:
        arguments:
            $apiKey: '%env(GEMINI_API_KEY)%'
