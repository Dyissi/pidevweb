{% extends 'base.html.twig' %}

{% block title %}Tournament Index{% endblock %}

{% block main %}
  <style>
    .tournament-page {
      background: linear-gradient(180deg, #f8f9fa 0%, #e9ecef 100%);
      min-height: 100vh;
    }
    .page-title h1 {
      font-weight: 800;
      color: #1a3c34;
      text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
    }
    .page-title p {
      color: #4a5e57;
      font-size: 1.2rem;
    }
    .filter-card {
      border: none;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      transition: transform 0.3s ease;
    }
    .filter-card:hover {
      transform: translateY(-5px);
    }
    .input-group-text {
      background: #fff;
      border-right: none;
      color: #6c757d;
    }
    .form-control, .form-select {
      border-radius: 8px;
      border: 1px solid #ced4da;
      transition: border-color 0.3s ease;
    }
    .form-control:focus, .form-select:focus {
      border-color: #007bff;
      box-shadow: 0 0 8px rgba(0,123,255,0.2);
    }
    .btn-primary {
      background: linear-gradient(45deg, #007bff, #00d4ff);
      border: none;
      border-radius: 8px;
      padding: 10px 20px;
      font-weight: 600;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    .btn-primary:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 15px rgba(0,123,255,0.3);
    }
    .alert-info {
      background: #e7f1ff;
      border: none;
      border-radius: 10px;
      color: #004085;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
      animation: fadeIn 0.5s ease;
    }
    .tournament-card {
      border: none;
      border-radius: 12px;
      box-shadow: 0 6px 25px rgba(0,0,0,0.1);
      overflow: hidden;
    }
    .table {
      margin-bottom: 0;
    }
    .table thead th {
      background: linear-gradient(45deg, #007bff, #00d4ff);
      color: white;
      font-weight: 600;
      border: none;
    }
    .table tbody tr {
      transition: background 0.2s ease;
    }
    .table tbody tr:hover {
      background: #f1f9ff;
    }
    .btn-sm {
      border-radius: 6px;
      font-size: 0.85rem;
      padding: 5px 10px;
      transition: transform 0.2s ease;
    }
    .btn-sm:hover {
      transform: scale(1.1);
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .form-label {
      font-weight: 500;
      color: #4a5e57;
      margin-bottom: 0.25rem;
    }
    .content-wrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 100%;
    }
    .calendar-container {
      background: white;
      border-radius: 12px;
      padding: 1.5rem;
      box-shadow: 0 6px 30px rgba(0,0,0,0.1);
      width: 100%;
      max-width: 900px;
      margin-top: 2rem;
    }
    .calendar-container h3 {
      color: #1a3c34;
      font-weight: 700;
      margin-bottom: 1.5rem;
      text-align: center;
      border-bottom: 2px solid #e9ecef;
      padding-bottom: 0.75rem;
    }
    #calendar-holder {
      width: 100%;
      height: 600px;
    }
    /* Enhanced calendar styles */
    .fc {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    }
    .fc .fc-toolbar-title {
      font-size: 1.35rem;
      font-weight: 700;
      color: #1a3c34;
      margin: 0 0.5rem;
    }
    .fc .fc-button {
      background-color: transparent;
      border: 1px solid #e9ecef;
      color: #4a5e57;
      font-weight: 500;
      transition: all 0.2s ease;
      padding: 0.4rem 0.8rem;
      font-size: 0.9rem;
    }
    .fc .fc-button:hover {
      background-color: #f1f9ff;
      color: #007bff;
      border-color: #dee2e6;
    }
    .fc .fc-button-primary:not(:disabled).fc-button-active {
      background-color: #007bff;
      border-color: #007bff;
      color: white;
    }
    .fc .fc-daygrid-day-number {
      color: #4a5e57;
      font-weight: 500;
      font-size: 0.95rem;
      padding: 4px;
    }
    .fc .fc-daygrid-day.fc-day-today {
      background-color: rgba(0,123,255,0.1);
    }
    .fc .fc-daygrid-day.fc-day-today .fc-daygrid-day-number {
      color: #007bff;
      font-weight: 600;
    }
    .fc .fc-event {
      background-color: #007bff;
      border: none;
      border-radius: 4px;
      padding: 2px 4px;
      font-size: 0.85rem;
      font-weight: 500;
    }
    .fc .fc-event:hover {
      background-color: #0062cc;
    }
    .fc .fc-daygrid-event {
      margin-top: 2px;
    }
    .fc .fc-daygrid-event-dot {
      border-color: white !important;
      margin-right: 4px;
    }
    .fc .fc-col-header-cell {
      background: #f8f9fa;
    }
    .fc .fc-col-header-cell-cushion {
      color: #4a5e57;
      font-weight: 600;
      padding: 8px 4px;
      font-size: 0.9rem;
      text-decoration: none;
    }
    .fc .fc-daygrid-day-frame {
      padding: 2px;
    }
    .fc .fc-daygrid-day-top {
      justify-content: center;
    }
    .fc .fc-daygrid-day-events {
      margin-top: 4px;
      min-height: 1.2em;
    }
    .fc .fc-scrollgrid {
      border: 1px solid #e9ecef;
      border-radius: 8px;
      overflow: hidden;
    }
    .fc .fc-daygrid-body {
      width: 100% !important;
    }
    .fc .fc-daygrid-day {
      border: 1px solid #e9ecef;
    }
    .fc .fc-daygrid-day:hover {
      background-color: #f8f9fa;
    }
    .fc .fc-daygrid-event-harness {
      margin-bottom: 1px;
    }
    .main-content {
      width: 100%;
      max-width: 100%;
    }
    @media (max-width: 992px) {
      .content-wrapper {
        flex-direction: column;
        align-items: center;
      }
      .calendar-container {
        width: 100%;
        max-width: 100%;
        margin-top: 2rem;
      }
      .filter-card .row > div {
        margin-bottom: 10px;
      }
      .btn-primary {
        width: 100%;
      }
      .main-content {
        max-width: 100%;
      }
    }
  </style>

  <div class="tournament-page">
    <div class="page-title text-center py-5">
      <div class="container">
        <h1 class="display-4">Tournament Management</h1>
        <p class="lead">Discover and organize your tournaments dynamically</p>
      </div>
    </div>

    <section class="section py-5">
      <div class="container" data-aos="fade-up">
        <div class="d-flex justify-content-between align-items-center mb-5">
          <h2 class="text-center mb-0 fw-bold text-dark">All Tournaments</h2>
          <a href="{{ path('app_tournament_new') }}" class="btn btn-primary">
            <i class="bi bi-plus-circle me-2"></i>Create Tournament
          </a>
        </div>

        <div class="filter-card mb-5">
          <div class="card-body p-4">
            <form id="filter-form" class="row g-3 align-items-center">
              <div class="col-md-3">
                <div class="input-group">
                  <span class="input-group-text"><i class="bi bi-search"></i></span>
                  <input type="text" name="search" id="search" value="{{ searchTerm|default('') }}" class="form-control" placeholder="Search by name or sport..." aria-label="Search tournaments">
                </div>
              </div>
              <div class="col-md-2">
                <select name="sport" id="sport" class="form-select">
                  <option value="">All Sports</option>
                  <option value="Basketball" {% if filterSport|default('') == 'Basketball' %}selected{% endif %}>Basketball</option>
                  <option value="Football" {% if filterSport|default('') == 'Football' %}selected{% endif %}>Football</option>
                  <option value="Volleyball" {% if filterSport|default('') == 'Volleyball' %}selected{% endif %}>Volleyball</option>
                  <option value="Handball" {% if filterSport|default('') == 'Handball' %}selected{% endif %}>Handball</option>
                </select>
              </div>
              <div class="col-md-2">
                <label for="start_date" class="form-label">Filter by End Date</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                  <input type="date" name="start_date" id="start_date" value="{{ filterStartDate|default('') }}" class="form-control" placeholder="Select end date (YYYY-MM-DD)" aria-label="Filter by end date">
                </div>
              </div>
              <div class="col-md-2">
                <label for="start_date_filter" class="form-label">Filter by Start Date</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                  <input type="date" name="start_date_filter" id="start_date_filter" value="{{ filterStartDateFilter|default('') }}" class="form-control" placeholder="Select start date (YYYY-MM-DD)" aria-label="Filter by start date">
                </div>
              </div>
            </form>
          </div>
        </div>

        <div class="content-wrapper">
          <div class="main-content">
            <div id="tournament-results">
              {% for label, messages in app.flashes %}
                {% for message in messages %}
                  <div class="alert alert-{{ label }} text-center" role="alert">
                    {{ message }}
                  </div>
                {% endfor %}
              {% endfor %}
              <div class="tournament-card">
                <div class="card-body p-0">
                  <div class="table-responsive">
                    <table class="table table-hover text-center">
                      <thead>
                        <tr>
                          <th scope="col">ID</th>
                          <th scope="col" style="width: 15%;">Name</th>
                          <th scope="col">Sport</th>
                          <th scope="col">Teams</th>
                          <th scope="col" style="width: 15%;">Start Date</th>
                          <th scope="col" style="width: 15%;">End Date</th>
                          <th scope="col">Location</th>
                          <th scope="col">Actions</th>
                        </tr>
                      </thead>
                      <tbody>
                        {% for tournament in tournaments %}
                          <tr>
                            <td>{{ tournament.id }}</td>
                            <td>{{ tournament.tournamentName }}</td>
                            <td>{{ tournament.tournamentTOS }}</td>
                            <td>{{ tournament.tournamentNbteams }}</td>
                            <td>{{ tournament.tournamentStartDate ? tournament.tournamentStartDate|date('Y-m-d') : '' }}</td>
                            <td>{{ tournament.tournamentEndDate ? tournament.tournamentEndDate|date('Y-m-d') : '' }}</td>
                            <td>{{ tournament.tournamentLocation }}</td>
                            <td>
                              <div class="d-flex justify-content-center gap-2">
                                <a href="{{ path('app_tournament_show', {'id': tournament.id}) }}" class="btn btn-sm btn-outline-primary">
                                  <i class="bi bi-eye"></i> View
                                </a>
                                <a href="{{ path('app_tournament_edit', {'id': tournament.id}) }}" class="btn btn-sm btn-outline-secondary">
                                  <i class="bi bi-pencil"></i> Edit
                                </a>
                                <form method="post" action="{{ path('app_tournament_delete', {'id': tournament.id}) }}" class="delete-form d-inline">
                                  <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ tournament.id) }}">
                                  <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this tournament?');">
                                    <i class="bi bi-trash"></i> Delete
                                  </button>
                                </form>
                              </div>
                            </td>
                          </tr>
                        {% else %}
                          <tr>
                            <td colspan="8" class="text-center text-muted py-5">
                              {% if searchTerm|default('') or filterSport|default('') or filterStartDate|default('') or filterStartDateFilter|default('') %}
                                No tournaments match your filters
                              {% else %}
                                No tournaments found. Create one to get started!
                              {% endif %}
                            </td>
                          </tr>
                        {% endfor %}
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="calendar-container">
            <h3>Tournament Calendar</h3>
            <div id="calendar-holder"></div>
          </div>
        </div>
      </div>
    </section>
  </div>
{% endblock %}

{% block javascript %}
  {{ parent() }}
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const filterForm = document.getElementById('filter-form');
      const searchInput = document.getElementById('search');
      const sportSelect = document.getElementById('sport');
      const startDateInput = document.getElementById('start_date');
      const startDateFilterInput = document.getElementById('start_date_filter');
      const resultsContainer = document.getElementById('tournament-results');

      // Function to update tournament results
      const updateResults = () => {
        const formData = new FormData(filterForm);
        const params = new URLSearchParams(formData).toString();
        const url = `{{ path('app_tournament_index') }}?${params}`;

        // Show loading indicator
        resultsContainer.innerHTML = `
          <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
          </div>`;

        fetch(url, {
          method: 'GET',
          headers: {
            'X-Requested-With': 'XMLHttpRequest',
            'Accept': 'text/html',
          },
        })
          .then(response => {
            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.text();
          })
          .then(html => {
            // Create a temporary container to parse the response HTML
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newResults = doc.querySelector('#tournament-results');

            if (newResults) {
              // Replace the content of the results container
              resultsContainer.innerHTML = newResults.innerHTML;
            } else {
              console.error('No #tournament-results found in response');
              resultsContainer.innerHTML = `
                <div class="alert alert-warning text-center">
                  Error loading tournaments. Please try again.
                </div>`;
            }
          })
          .catch(error => {
            console.error('Error fetching tournament results:', error);
            resultsContainer.innerHTML = `
              <div class="alert alert-danger text-center">
                Failed to load tournaments: ${error.message}
              </div>`;
          });
      };

      // Prevent default form submission
      filterForm.addEventListener('submit', (e) => {
        e.preventDefault();
      });

      // Debounce function to limit rapid updates
      const debounce = (func, wait) => {
        let timeout;
        return (...args) => {
          clearTimeout(timeout);
          timeout = setTimeout(() => func.apply(this, args), wait);
        };
      };

      // Debounced update function to prevent excessive requests
      const debouncedUpdateResults = debounce(updateResults, 300);

      // Event listeners for input changes
      searchInput.addEventListener('input', debouncedUpdateResults);
      sportSelect.addEventListener('change', debouncedUpdateResults);
      startDateInput.addEventListener('change', debouncedUpdateResults);
      startDateFilterInput.addEventListener('change', debouncedUpdateResults);

      // Initialize FullCalendar
      const calendarEl = document.getElementById('calendar-holder');
      if (calendarEl && typeof FullCalendar !== 'undefined') {
        const calendar = new FullCalendar.Calendar(calendarEl, {
          initialView: 'dayGridMonth',
          headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth'
          },
          dayMaxEventRows: 4,
          height: 600,
          eventSources: [{
            url: '{{ path('fc_load_events') }}',
            method: 'POST',
            extraParams: {
              filters: JSON.stringify({})
            },
            failure: () => {
              console.error('Error fetching calendar events');
            }
          }],
          timeZone: 'UTC',
          eventDisplay: 'block',
          eventTextColor: '#ffffff',
          displayEventTime: false, // Hide the time in events
          eventClick: function(info) {
            if (info.event.url) {
              info.jsEvent.preventDefault();
              window.location.href = info.event.url;
            }
          },
          dayHeaderFormat: {
            weekday: 'short',
            day: 'numeric'
          },
          titleFormat: {
            year: 'numeric',
            month: 'long'
          }
        });
        calendar.render();
      } else {
        console.error('Calendar element or FullCalendar library not found');
      }
    });
  </script>
{% endblock %}