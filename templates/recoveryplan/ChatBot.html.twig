{% extends 'base.html.twig' %}
{% block hero %}


{% block body %}
    <h1 style="text-align: center; font-size: 1.8em;">Injury Recovery Chatbot</h1>
    {% if error is defined and error %}
        <p>{{ error }}</p>
    {% else %}
        <div class="chatbot-container">
            <div class="chatbot-messages" id="chatbot-messages"></div>
            <div class="chatbot-input">
                <input type="text" id="chat-input" placeholder="Type your question..." />
                <button onclick="sendMessage()">Send</button>
            </div>
        </div>

        <link href="https://unpkg.com/botui@0.3.9/build/botui.min.css" rel="stylesheet" />
        <style>
            .chatbot-container {
                max-width: 600px;
                margin: 20px auto;
                border: 1px solid #ccc;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
                background-color: #fff;
            }
            .chatbot-messages {
                max-height: 400px;
                overflow-y: auto;
                padding: 20px;
            }
            .chatbot-message {
                margin: 10px 0;
                padding: 10px 15px;
                border-radius: 15px;
                max-width: 80%;
                line-height: 1.4;
            }
            .chatbot-message.user {
                background-color: #007bff;
                color: #fff;
                margin-left: auto;
                text-align: right;
            }
            .chatbot-message.bot {
                background-color: #f0f0f0;
                color: #333;
                margin-right: auto;
            }
            .chatbot-input {
                display: flex;
                padding: 10px;
                border-top: 1px solid #ccc;
            }
            .chatbot-input input {
                flex: 1;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                margin-right: 10px;
            }
            .chatbot-input button {
                padding: 10px 20px;
                background-color: #007bff;
                color: #fff;
                border: none;
                border-radius: 5px;
                cursor: pointer;
            }
            .chatbot-input button:hover {
                background-color: #0056b3;
            }
        </style>
        <script src="https://unpkg.com/botui@0.3.9/build/botui.min.js"></script>
        <script>
            const recoveryData = {{ recoveryData|json_encode|raw }};
            const messagesContainer = document.getElementById('chatbot-messages');
            const chatInput = document.getElementById('chat-input');
            let learnedResponses = JSON.parse(localStorage.getItem('learnedResponses')) || {};

            function addMessage(text, sender) {
                const messageDiv = document.createElement('div');
                messageDiv.className = `chatbot-message ${sender}`;
                messageDiv.textContent = text;
                messagesContainer.appendChild(messageDiv);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
                if (sender === 'user' || sender === 'bot') {
                    const audio = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-message-pop-alert-2354.mp3');
                    audio.play();
                }
            }

            function learnResponse(input, response) {
                if (!learnedResponses[input]) {
                    learnedResponses[input] = response;
                    localStorage.setItem('learnedResponses', JSON.stringify(learnedResponses));
                }
            }

            function sendMessage() {
                const input = chatInput.value.trim().toLowerCase();
                if (!input) return;

                addMessage(input, 'user');
                let response;

                if (learnedResponses[input]) {
                    response = learnedResponses[input];
                } else if (input.includes('hello') || input.includes('hi')) {
                    response = 'Hello! How are you today?';
                } else if (input.includes('fine') || input.includes('good') || input.includes('great') || input.includes('chilling') || input.includes('okay')) {
                    response = 'Great to hear! How can I assist you with your recovery?';
                } else if (input.includes('bad') || input.includes('sad') || input.includes('tired') || input.includes('pain')) {
                    response = 'I’m sorry you’re feeling that way. Take it one step at a time, and I’m here to help with your recovery questions!';
                } else if (input.includes('injury')) {
                    response = `Your injury is ${recoveryData.injuryType}.`;
                } else if (input.includes('phase')) {
                    response = `You are in the ${recoveryData.recoveryPhase} of recovery.`;
                } else if (input.includes('eat') || input.includes('nutrition')) {
                    response = `Nutrition plan: ${recoveryData.nutritionPlan}`;
                } else if (input.includes('recovery')) {
                    response = `Your recovery is in the ${recoveryData.recoveryPhase}. Follow your nutrition plan: ${recoveryData.nutritionPlan}`;
                } else if (input.includes('exercise') || input.includes('workout')) {
                    response = 'Light stretching or walking may help, depending on your injury. Consult your doctor for specific exercises.';
                } else if (input.includes('progress')) {
                    response = `You're making progress in the ${recoveryData.recoveryPhase}! Keep following your recovery plan.`;
                } else if (input.includes('tips')) {
                    response = 'Stay hydrated, follow your nutrition plan, and rest well to support healing.';
                } else {
                    response = 'Sorry, I don’t understand. Try asking about your injury, phase, nutrition, exercises, or progress.';
                }

                setTimeout(() => {
                    addMessage(response, 'bot');
                    learnResponse(input, response);
                }, 500);
                chatInput.value = '';
            }

            chatInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') sendMessage();
            });

            addMessage('Welcome! You can ask about your injury, recovery phase, nutrition plan, exercises, progress, or just say hello!', 'bot');
        </script>
    {% endif %}
{% endblock %}
{% endblock %}