{% extends 'base.html.twig' %}
{% block hero %}

{% block body %}
    <h1 style="text-align: center; font-size: 1.8em;">Injury Recovery Chatbot</h1>
    <div class="chatbot-container">
        <div class="chatbot-messages" id="chatbot-messages"></div>
        <div class="chatbot-input">
            <input type="text" id="chat-input" placeholder="Ask about your injuries, recovery, or just say hi..." />
            <button onclick="sendMessage()">Send</button>
        </div>
        <div class="back-button">
            <a href="{{ path(back_route) }}" class="btn-back">Back</a>
        </div>
    </div>

    <link href="https://unpkg.com/botui@0.3.9/build/botui.min.css" rel="stylesheet" />
    <style>
        .chatbot-container {
            max-width: 600px;
            margin: 20px auto;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            background-color: #fff;
        }
        .chatbot-messages {
            max-height: 400px;
            overflow-y: auto;
            padding: 20px;
        }
        .chatbot-message {
            margin: 10px 0;
            padding: 10px 15px;
            border-radius: 15px;
            max-width: 80%;
            line-height: 1.4;
        }
        .chatbot-message.user {
            background-color: #a5d6a7;
            color: #000;
            margin-left: auto;
            text-align: right;
        }
        .chatbot-message.bot {
            background-color: #e3f2fd;
            color: #000;
            margin-right: auto;
        }
        .chatbot-input {
            display: flex;
            padding: 10px;
            border-top: 1px solid #ccc;
        }
        .chatbot-input input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-right: 10px;
        }
        .chatbot-input button {
            padding: 10px 20px;
            background-color: #709775;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .chatbot-input button:hover {
            background-color: #5a7a5f;
        }
        .back-button {
            text-align: center;
            padding: 10px;
        }
        .btn-back {
            display: inline-block;
            padding: 10px 20px;
            background-color: #ccc;
            color: #333;
            text-decoration: none;
            border-radius: 5px;
        }
        .btn-back:hover {
            background-color: #bbb;
        }
    </style>
    <script>
        const messagesContainer = document.getElementById('chatbot-messages');
        const chatInput = document.getElementById('chat-input');

        function addMessage(text, isUser) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `chatbot-message ${isUser ? 'user' : 'bot'}`;
            messageDiv.textContent = text;
            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        async function sendMessage() {
            const message = chatInput.value.trim();
            if (!message) return;

            addMessage(message, true);
            chatInput.value = '';

            try {
                const response = await fetch('{{ path('chatbot_show') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: `message=${encodeURIComponent(message)}`
                });

                const data = await response.json();
                if (data.error) {
                    addMessage('Error: ' + data.error, false);
                } else {
                    addMessage(data.response, false);
                }
            } catch (error) {
                addMessage('Error communicating with the server.', false);
                console.error('Fetch error:', error);
            }
        }

        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') sendMessage();
        });
        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') sendMessage();
        });

        // Initial welcome message
        addMessage(`Welcome to the Recovery ChatDoc! ðŸ¤– Here are some things you can ask:
- "What is my recovery phase?" â†’ Get your current recovery phase and remaining days.
- "What should I eat for recovery?" â†’ Get nutrition advice based on your injury.
- "What exercises can I do?" â†’ Get activity recommendations.
- "Show my recovery plan" â†’ View your full recovery plan details.
- "Hi" or "Hello" â†’ See this message again.

How can I assist you today?`, false);
    </script>
{% endblock %}
{% endblock %}
