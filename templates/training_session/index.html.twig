{% extends 'base.html.twig' %}

{% block title %}Training Sessions{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# FullCalendar CSS removed #}
    <style>
        .filter-btn {
            margin-right: 5px;
        }
        .filter-btn.active {
            background-color: #007bff !important;
            color: white !important;
            border-color: #007bff !important;
        }
        .filter-section {
            margin-bottom: 1rem;
            padding: 1rem;
            background-color: #f8f9fa;
            border-radius: 0.25rem;
        }
        .filter-section h5 {
            margin-bottom: 0.5rem;
        }
        /* Exercise browser styles */
        .exercise-browser {
            margin: 2rem 0;
            padding: 1rem;
            background-color: #fff;
            border-radius: 0.25rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .exercise-card {
            border: 1px solid #e9ecef;
            border-radius: 0.5rem;
            padding: 1.5rem;
            height: 100%;
            transition: all 0.3s ease;
            background: #fff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        .exercise-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .exercise-title {
            color: #2c3e50;
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 1rem;
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 0.5rem;
        }
        .exercise-description {
            color: #6c757d;
            font-size: 0.9rem;
            line-height: 1.6;
        }
        .exercise-meta {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #e9ecef;
        }
        .exercise-meta span {
            margin-right: 1rem;
            font-size: 0.85rem;
        }
        /* Focus badge styles */
        .badge-focus {
            padding: 5px 10px;
            border-radius: 4px;
            font-weight: 500;
            color: #fff;
        }
        .badge-agility { background-color: #3498db; }
        .badge-strength { background-color: #e74c3c; }
        .badge-dribbling { background-color: #2ecc71; }
        .badge-endurance { background-color: #f39c12; }
        .badge-sprint { background-color: #9b59b6; }
        .badge-speed { background-color: #1abc9c; }
        .category-btn {
            transition: all 0.3s ease;
            min-width: 120px;
        }
        
        .category-btn:hover {
            transform: translateY(-2px);
        }
        
        .category-btn.active {
            background-color: var(--bs-primary);
            color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        #exerciseResults {
            max-height: 600px;
            overflow-y: auto;
            padding-right: 10px;
        }
        
        #exerciseResults::-webkit-scrollbar {
            width: 8px;
        }
        
        #exerciseResults::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }
        
        #exerciseResults::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 4px;
        }
        
        #exerciseResults::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
        .instruction-step {
            margin-bottom: 1rem;
            padding: 1rem;
            background-color: #f8f9fa;
            border-radius: 0.5rem;
            border-left: 4px solid #0d6efd;
        }
        
        .instruction-step:hover {
            background-color: #e9ecef;
        }
        
        .step-number {
            display: inline-block;
            width: 24px;
            height: 24px;
            background-color: #0d6efd;
            color: white;
            border-radius: 50%;
            text-align: center;
            line-height: 24px;
            margin-right: 8px;
            font-weight: bold;
        }
        
        .exercise-info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1.5rem;
        }
        
        .info-card {
            padding: 1rem;
            background-color: #f8f9fa;
            border-radius: 0.5rem;
            text-align: center;
        }
        
        .info-card i {
            font-size: 1.5rem;
            color: #0d6efd;
            margin-bottom: 0.5rem;
        }
        
        .info-card-label {
            font-size: 0.875rem;
            color: #6c757d;
            margin-bottom: 0.25rem;
        }
        
        .info-card-value {
            font-weight: 600;
            color: #2c3e50;
        }
    </style>
{% endblock %}

{% block main %}
    <div class="container py-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="mb-0">Training Sessions</h1>
            <div class="d-flex gap-2 flex-nowrap">
                <a href="{{ path('app_training_session_new') }}" class="btn btn-primary">
                    <i class="bi bi-plus-lg"></i> Add New
                </a>
                <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#exerciseBrowserModal">
                    <i class="bi bi-search"></i> Browse Exercises
                </button>
            </div>
        </div>
        <div class="row mb-4 align-items-end">
            <div class="col-md-8">
                <!-- Left empty or for future filters -->
            </div>
           
        </div>

        {# Training Sessions Filter Section #}
        <div class="filter-section mb-4">
            <div class="row g-3">
                <div class="col-md-8">
                    <h5 class="mb-2">Filter by Focus:</h5>
                    <div class="btn-group flex-wrap" role="group">
                        <a href="{{ path('app_training_session_index', {'focus': 'all'}) }}" 
                           class="btn btn-outline-primary filter-btn {{ current_focus == 'all' ? 'active' : '' }}">
                            All
                        </a>
                        {% for focus in focus_choices %}
                            <a href="{{ path('app_training_session_index', {'focus': focus}) }}" 
                               class="btn btn-outline-primary filter-btn {{ current_focus == focus ? 'active' : '' }}">
                                {{ focus }}
                            </a>
                        {% endfor %}
                    </div>
                </div>
                <div class="col-md-4">
                    <h5 class="mb-2">Sort by Duration:</h5>
                    <div class="btn-group" role="group">
                        <a href="{{ path('app_training_session_index', {'filter': 'longest'}) }}" 
                           class="btn btn-outline-secondary filter-btn {{ current_filter == 'longest' ? 'active' : '' }}">
                            Longest
                        </a>
                        <a href="{{ path('app_training_session_index', {'filter': 'shortest'}) }}" 
                           class="btn btn-outline-secondary filter-btn {{ current_filter == 'shortest' ? 'active' : '' }}">
                            Shortest
                        </a>
                    </div>
                </div>
            </div>
        </div>

        {# Training Sessions Table #}
        <div class="container training-table mb-5">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">Training Sessions List</h2>
            </div>

            <div class="table-responsive">
                <table class="table table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th>Focus</th>
                            <th>Start Time</th>
                            <th>Duration</th>
                            <th>Location</th>
                            <th>Team</th>
                            <th>Notes</th>
                            <th class="text-end">
                                <form method="get" class="mb-0 d-flex align-items-center gap-2 justify-content-end">
                                    <label for="limit" class="form-label mb-0">Show:</label>
                                    <select name="limit" id="limit" class="form-select w-auto" onchange="this.form.submit()">
                                        <option value="1" {{ app.request.get('limit') == 1 ? 'selected' : '' }}>1</option>
                                        <option value="5" {{ app.request.get('limit') == 5 ? 'selected' : '' }}>5</option>
                                        <option value="10" {{ app.request.get('limit') == 10 or not app.request.get('limit') ? 'selected' : '' }}>10</option>
                                        <option value="20" {{ app.request.get('limit') == 20 ? 'selected' : '' }}>20</option>
                                    </select>
                                    <span>per page</span>
                                </form>
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    {% for session in training_sessions %}
                        <tr>
                                <td>
                                    <span class="badge-focus badge-{{ session.sessionFocus|lower }}">
                                        {{ session.sessionFocus }}
                                    </span>
                                </td>
                            <td>{{ session.sessionStartTime|date('Y-m-d H:i') }}</td>
                            <td>{{ session.sessionDuration }} <small>mins</small></td>
                            <td>{{ session.location.locationName }}</td>
                            <td>{{ session.team ? session.team.teamName : 'N/A' }}</td>
                            <td>
                                {% if session.sessionNotes %}
                                    {% if session.sessionNotes|length > 50 %}
                                        {{ session.sessionNotes|slice(0, 50) }}...
                                    {% else %}
                                        {{ session.sessionNotes }}
                                    {% endif %}
                                {% else %}
                                    <span class="text-muted">None</span>
                                {% endif %}
                            </td>
                            <td class="actions">
                                <div class="btn-group" role="group">
                                    <a href="{{ path('app_training_session_show', {'sessionId': session.sessionId}) }}" 
                                       class="btn btn-sm btn-info" title="View">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a href="{{ path('app_training_session_edit', {'sessionId': session.sessionId}) }}" 
                                       class="btn btn-sm btn-warning" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <form method="post" action="{{ path('app_training_session_delete', {'sessionId': session.sessionId}) }}" 
                                          class="d-inline" onsubmit="return confirm('Delete this session?');">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ session.sessionId) }}">
                                        <button class="btn btn-sm btn-danger">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="7" class="text-center py-4">
                                <div class="empty-state">
                                    <i class="bi bi-calendar-x"></i>
                                        <h4>No sessions found</h4>
                                        <p class="text-muted">Try changing the filters or add a new session</p>
                                    <a href="{{ path('app_training_session_new') }}" class="btn btn-primary mt-2">
                                            <i class="bi bi-plus-lg"></i> Create new session
                                    </a>
                                </div>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>

            <div class="navigation">
                {{ knp_pagination_render(training_sessions) }}
            </div>
        </div>

        {# Exercise Browser Modal #}
        <div class="modal fade" id="exerciseBrowserModal" tabindex="-1" aria-labelledby="exerciseBrowserModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title" id="exerciseBrowserModalLabel">
                            <i class="bi bi-search"></i> Exercise Browser
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-3">
                            <div class="col-md-12">
                                <h6 class="text-primary mb-3">Select Exercise Category:</h6>
                                <div class="d-flex flex-wrap gap-2">
                                    <button class="btn btn-outline-primary category-btn px-4" data-focus="arms">
                                        <i class="bi bi-lightning-charge"></i> Arms
                                    </button>
                                    <button class="btn btn-outline-primary category-btn px-4" data-focus="legs">
                                        <i class="bi bi-lightning-charge"></i> Legs
                                    </button>
                                    <button class="btn btn-outline-primary category-btn px-4" data-focus="abs">
                                        <i class="bi bi-lightning-charge"></i> Abs
                                    </button>
                                    <button class="btn btn-outline-primary category-btn px-4" data-focus="chest">
                                        <i class="bi bi-lightning-charge"></i> Chest
                                    </button>
                                    <button class="btn btn-outline-primary category-btn px-4" data-focus="back">
                                        <i class="bi bi-lightning-charge"></i> Back
                                    </button>
                                    <button class="btn btn-outline-primary category-btn px-4" data-focus="shoulders">
                                        <i class="bi bi-lightning-charge"></i> Shoulders
                                    </button>
                                    <button class="btn btn-outline-primary category-btn px-4" data-focus="calves">
                                        <i class="bi bi-lightning-charge"></i> Calves
                                    </button>
                                </div>
                            </div>
                        </div>
                        <hr>
                        <div id="exerciseResults" class="mt-4">
                            <div class="text-center text-muted">
                                <i class="bi bi-arrow-up-circle display-4"></i>
                                <p class="mt-3">Select a category to view exercises</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {# Exercise Details Modal #}
        <div class="modal fade" id="exerciseDetailsModal" tabindex="-1" aria-labelledby="exerciseDetailsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title" id="exerciseDetailsModalLabel">
                            <i class="bi bi-info-circle"></i> Exercise Details
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div id="exerciseDetails" class="p-3">
                            {# Content will be dynamically populated #}
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const categoryButtons = document.querySelectorAll('.category-btn');
            const exerciseResults = document.getElementById('exerciseResults');
            let currentExercises = [];

            categoryButtons.forEach(button => {
                button.addEventListener('click', function() {
                    categoryButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    
                    const focus = this.dataset.focus;
                    loadExercises(focus);
                });
            });

            function loadExercises(focus) {
                exerciseResults.innerHTML = `
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2 text-muted">Loading exercises...</p>
                    </div>`;

                fetch(`/training/session/exercises/${focus}`)
                    .then(response => {
                        const contentType = response.headers.get('content-type');
                        if (!contentType || !contentType.includes('application/json')) {
                            throw new Error('Invalid response format from server');
                        }
                        return response.json().then(data => {
                            if (!response.ok) {
                                throw new Error(data.message || 'Failed to load exercises');
                            }
                            return data;
                        });
                    })
                    .then(response => {
                        console.log('API Response:', response);
                        
                        if (response.error) {
                            throw new Error(response.message);
                        }

                        const exercises = response.data || [];
                        
                        if (exercises.length === 0) {
                            exerciseResults.innerHTML = `
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle me-2"></i>
                                    ${response.message || 'No exercises found for this category.'}
                                </div>`;
                            return;
                        }

                        currentExercises = exercises;
                        displayExercises(exercises);
                    })
                    .catch(error => {
                        console.error('Error loading exercises:', error);
                        exerciseResults.innerHTML = `
                            <div class="alert alert-danger">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                ${error.message || 'Error loading exercises. Please try again.'}
                                <br>
                                <small class="text-muted">If this persists, please contact support.</small>
                            </div>`;
                    });
            }

            function formatInstructions(description) {
                if (!description) return '<p class="text-muted">No instructions available.</p>';
                
                // Split into steps based on periods, but keep the periods
                const steps = description.split(/(?<=\.)/).filter(step => step.trim());
                
                return steps.map((step, index) => `
                    <div class="instruction-step">
                        <span class="step-number">${index + 1}</span>
                        <span>${step.trim()}</span>
                    </div>
                `).join('');
            }

            function displayExerciseDetails(exercise) {
                const detailsHtml = `
                    <div class="exercise-info-grid mb-4">
                        <div class="info-card">
                            <i class="bi bi-tag"></i>
                            <div class="info-card-label">Category</div>
                            <div class="info-card-value">${exercise.category}</div>
                        </div>
                        <div class="info-card">
                            <i class="bi bi-gear"></i>
                            <div class="info-card-label">Equipment</div>
                            <div class="info-card-value">${exercise.equipment || 'No equipment'}</div>
                        </div>
                        <div class="info-card">
                            <i class="bi bi-bar-chart"></i>
                            <div class="info-card-label">Difficulty</div>
                            <div class="info-card-value">${exercise.difficulty}</div>
                        </div>
                    </div>
                    <h5 class="mb-3">
                        <i class="bi bi-list-ol text-primary"></i> Instructions
                    </h5>
                    <div class="instructions-container">
                        ${formatInstructions(exercise.description)}
                    </div>
                `;

                document.getElementById('exerciseDetails').innerHTML = detailsHtml;
                document.getElementById('exerciseDetailsModalLabel').innerHTML = `
                    <i class="bi bi-activity"></i> ${exercise.name}
                `;
            }

            function displayExercises(exercises) {
                if (!exercises || exercises.length === 0) {
                    exerciseResults.innerHTML = `
                        <div class="text-center text-muted">
                            <i class="bi bi-inbox display-4"></i>
                            <p class="mt-3">No exercises found for this category</p>
                        </div>`;
                    return;
                }

                let html = '<div class="row g-4">';
                exercises.forEach(exercise => {
                    html += `
                        <div class="col-md-6">
                            <div class="exercise-card">
                                <h6 class="exercise-title">
                                    <i class="bi bi-activity"></i> 
                                    ${exercise.name}
                                </h6>
                                <div class="exercise-meta mb-3">
                                    <span class="badge bg-primary">
                                        <i class="bi bi-tag"></i> ${exercise.category}
                                    </span>
                                    <span class="badge bg-secondary">
                                        <i class="bi bi-gear"></i> ${exercise.equipment || 'No equipment'}
                                    </span>
                                    <span class="badge bg-info">
                                        <i class="bi bi-bar-chart"></i> ${exercise.difficulty}
                                    </span>
                                </div>
                                <div class="exercise-description">
                                    <p>${exercise.description}</p>
                                </div>
                                <div class="text-end mt-3">
                                    <button class="btn btn-sm btn-primary select-exercise" 
                                            data-exercise-id="${exercise.id}"
                                            data-exercise-name="${exercise.name}">
                                        <i class="bi bi-info-circle"></i> View Details
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                });
                html += '</div>';
                exerciseResults.innerHTML = html;

                document.querySelectorAll('.select-exercise').forEach(button => {
                    button.addEventListener('click', function() {
                        const exerciseId = this.dataset.exerciseId;
                        const exercise = currentExercises.find(ex => ex.id === exerciseId);
                        
                        if (exercise) {
                            const browserModal = bootstrap.Modal.getInstance(document.getElementById('exerciseBrowserModal'));
                            browserModal.hide();

                            displayExerciseDetails(exercise);
                            const detailsModal = new bootstrap.Modal(document.getElementById('exerciseDetailsModal'));
                            detailsModal.show();
                        }
                    });
                });
            }
        });
    </script>
{% endblock %}